{"version":3,"sources":["utils.js","components/Pokedex.js","components/Pokemon.js","components/pokedex.jpg","components/Intro.js","App.js","index.js"],"names":["toFirstCharUppercase","name","charAt","toUpperCase","slice","useStyles","makeStyles","theme","pokedexContainer","paddingTop","paddingLeft","paddingRight","cardMedia","margin","cardContent","textAlign","searchContainer","display","background","fade","palette","common","white","marginTop","marginBottom","searchIcon","alignSelf","searchInput","width","button","color","Pokedex","props","history","classes","useState","pokemonData","setPokemonData","filter","setFilter","useEffect","axios","get","then","response","console","log","results","data","newPokemonData","forEach","pokemon","index","id","sprite","AppBar","position","Toolbar","Grid","container","direction","justify","alignItems","spacing","item","className","TextField","label","variant","onChange","e","input","target","value","toLowerCase","Button","onClick","push","Object","keys","map","pokemonId","includes","xs","sm","Card","CardMedia","image","style","height","CardContent","Typography","getPokemonCard","CircularProgress","Pokemon","match","params","undefined","setPokemon","catch","error","weight","types","sprites","fullImageUrl","front_default","src","typeInfo","type","generatePokemonJSX","card","padding","backgroundImage","Image","title","Intro","Container","raised","App","exact","path","render","createBrowserHistory","ReactDOM","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.12c65a5e.chunk.js","sourcesContent":["export const toFirstCharUppercase = name =>\n    name.charAt(0).toUpperCase() + name.slice(1);","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  AppBar,\n  Toolbar,\n  Grid,\n  Card,\n  CardMedia,\n  CardContent,\n  CircularProgress,\n  Typography,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport { toFirstCharUppercase } from \"../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  pokedexContainer: {\n    paddingTop: \"20px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n  cardMedia: {\n    margin: \"auto\",\n  },\n  cardContent: {\n    textAlign: \"center\",\n  },\n  searchContainer: {\n    display: \"flex\",\n    background: fade(theme.palette.common.white, 0.15),\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n  },\n  searchIcon: {\n    alignSelf: \"flex-end\",\n    marginBottom: \"5px\",\n  },\n  searchInput: {\n    width: \"200px\",\n    margin: \"5px\",\n  },\n  button: {\n    background: \"red\",\n    color: \"white\",\n  },\n}));\n\nconst Pokedex = (props) => {\n  const { history } = props;\n  const classes = useStyles();\n  const [pokemonData, setPokemonData] = useState({});\n  const [filter, setFilter] = useState(\"\");\n\n  const handleSearchChange = (e) => {\n    let input = e.target.value;\n    setFilter(input.toLowerCase());\n  };\n\n  useEffect(() => {\n    axios\n      .get(`https://pokeapi.co/api/v2/pokemon?limit=898`)\n      .then(function (response) {\n        console.log(response);\n        const { data } = response;\n        const { results } = data;\n        const newPokemonData = {};\n        results.forEach((pokemon, index) => {\n          newPokemonData[index + 1] = {\n            id: index + 1,\n            name: pokemon.name,\n            sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\n              index + 1\n            }.png`,\n          };\n        });\n        setPokemonData(newPokemonData);\n      });\n  }, []);\n\n  const getPokemonCard = (pokemonId) => {\n    const { id, name, sprite } = pokemonData[pokemonId];\n\n    return (\n      <Grid item xs={12} sm={4} key={pokemonId}>\n        <Card onClick={() => history.push(`/${pokemonId}`)}>\n          <CardMedia\n            className={classes.cardMedia}\n            image={sprite}\n            style={{ width: \"130px\", height: \"130px\" }}\n          />\n          <CardContent className={classes.cardContent}>\n            <Typography>{`${id}. ${toFirstCharUppercase(name)}`}</Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n            spacing={3}\n          >\n            <Grid item>\n              <div className={classes.searchContainer}>\n                <SearchIcon className={classes.searchIcon} />\n                <TextField\n                  className={classes.searchInput}\n                  label=\"Pokemon\"\n                  variant=\"standard\"\n                  onChange={handleSearchChange}\n                />\n              </div>\n            </Grid>\n            <Grid item>\n              <Button\n                className={classes.button}\n                variant=\"contained\"\n                onClick={() => history.push(\"/\")}\n              >\n                Back to Pokedex selection\n              </Button>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      {pokemonData ? (\n        <Grid container spacing={2} className={classes.pokedexContainer}>\n          {Object.keys(pokemonData).map(\n            (pokemonId) =>\n              pokemonData[pokemonId].name.includes(filter) &&\n              getPokemonCard(pokemonId)\n          )}\n        </Grid>\n      ) : (\n        <CircularProgress />\n      )}\n    </>\n  );\n};\n\nexport default Pokedex;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Typography, CircularProgress, Button } from '@material-ui/core';\nimport { toFirstCharUppercase } from '../utils';\n\nconst Pokemon = (props) => {\n    const { history, match } = props;\n    const { params } = match;\n    const { pokemonId } = params;\n    const [pokemon, setPokemon] = useState(undefined);\n\n    useEffect(() => {\n        axios\n            .get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}`)\n            .then(function (response) {\n                const { data } = response;\n                setPokemon(data);\n            })\n            .catch(function (error) {\n                setPokemon(false);\n            })\n    }, [pokemonId]);\n\n    const generatePokemonJSX = () => {\n        const { name, id, height, weight, types, sprites } = pokemon\n        const fullImageUrl = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\n        const { front_default } = sprites\n        return (\n            <>\n                <Typography variant='h1'>\n                    {`${id}`}. {toFirstCharUppercase(name)}\n                    <img src={front_default} />\n                </Typography>\n                <img style={{ width: '300px', height: '300px' }} src={fullImageUrl} />\n                <Typography variant='h3'>Pokemon Info</Typography>\n                <Typography>Height: {height}</Typography>\n                <Typography>Weight: {weight}</Typography>\n                <Typography variant='h6'>Types:</Typography>\n                {types.map(typeInfo => {\n                    const { type } = typeInfo;\n                    const { name } = type;\n                    return <Typography key={name}> {`${name}`}</Typography>\n                })}\n            </>\n        );\n    };\n\n    return (\n        <>\n            {pokemon === undefined && <CircularProgress />}\n            {pokemon !== undefined && pokemon && generatePokemonJSX()}\n            {pokemon === false && <Typography> Pokemon not found </Typography>}\n            {pokemon !== undefined && (\n                <Button variant='contained' onClick={() => history.push('/pokedexNat')}>Back to Pokedex</Button>\n            )}\n        </>\n    );\n};\n\nexport default Pokemon;","export default __webpack_public_path__ + \"static/media/pokedex.c389df47.jpg\";","import React from 'react';\nimport {\n    Container,\n    Grid,\n    Card,\n    Typography,\n    Button,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Image from './pokedex.jpg'\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        padding: 'auto',\n        margin: 'auto',\n        marginTop: '100px',\n        height: '446px',\n        width: '342px',\n        backgroundImage: `url(${Image})`\n    },\n    button: {\n        color: 'white',\n        background: 'red',\n        marginTop: '10px'\n    },\n    title: {\n        marginTop: '130px'\n    }\n}));\n\nconst Intro = (props) => {\n    const classes = useStyles();\n    const { history } = props;\n\n    return (\n        <Container>\n            <Card className={classes.card} raised>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Typography\n                        className={classes.title}\n                        variant='h6'\n                    >Choose a Pokedex\n                    </Typography>\n                    <Button\n                        className={classes.button}\n                        variant=\"contained\"\n                        onClick={() => history.push('/pokedexNat')}\n                    >\n                        National Pokedex\n                </Button>\n                </Grid>\n            </Card>\n        </Container>\n    )\n};\n\nexport default Intro;","import React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Pokedex from './components/Pokedex';\nimport Pokemon from './components/Pokemon';\nimport Intro from './components/Intro';\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/\" render={(props) => <Intro {...props} />} />\n    <Route exact path=\"/pokedexNat\" render={(props) => <Pokedex {...props} />} />\n    <Route\n      exact\n      path=\"/:pokemonId\"\n      render={(props) => <Pokemon {...props} />}\n    />\n  </Switch>\n);\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL} history={history}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}